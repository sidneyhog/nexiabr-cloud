name: Setup VPS and Deploy Stack

on:
  push:
    branches:
      - main

jobs:
  setup-vps:
    runs-on: ubuntu-latest
    steps:
      # Baixando o repositório
      - name: Checkout repository
        uses: actions/checkout@v2

      # Adicionando a VPS ao arquivo known_hosts
      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh  # Cria o diretório caso não exista
          ssh-keyscan -H 156.67.83.29 >> ~/.ssh/known_hosts

          - name: Set up SSH key
          run: |
            echo "$SSH_KEY_CONTABO_NEXIABR" | tr -d '\r' > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-add ~/.ssh/id_rsa
        

      # Configuração inicial da VPS
      - name: Initial VPS setup
        run: |
          ssh -o StrictHostKeyChecking=no root@156.67.83.29 << 'EOF'
            export DEBIAN_FRONTEND=noninteractive  # Força o modo não interativo
            sudo apt-get update -y
            sudo apt-get install -y apparmor-utils
            hostnamectl set-hostname nexia
            sed -i 's/localhost/nexiabr/g' /etc/hosts
            curl -fsSL https://get.docker.com | bash
            docker swarm init
            docker network create --driver=overlay network_nexiabr
          EOF

      # Deploy Traefik stack
      - name: Deploy Traefik stack
        run: |
          ssh root@156.67.83.29 "docker stack deploy --prune --resolve-image always -c /root/stacks/traefik.yaml traefik"

      # Deploy Portainer stack
      - name: Deploy Portainer stack
        run: |
          ssh root@156.67.83.29 "docker stack deploy --prune --resolve-image always -c /root/stacks/portainer.yaml portainer"

      # Esperar o Portainer estar pronto antes de configurar
      - name: Wait for Portainer to be ready
        run: |
          echo "Aguardando o Portainer iniciar..."
          sleep 60  # Aguarda 60 segundos para garantir que o Portainer esteja disponível

      # Criar conta admin do Portainer via API
      - name: Create admin account for Portainer
        run: |
          echo "Criando conta admin no Portainer..."
          TOKEN=$(curl -s -X POST -H "Content-Type: application/json" \
            -d '{"Username": "admin", "Password": "'"${{ secrets.SENHA_PORTAINER }}"'"}' \
            http://156.67.83.29:9000/api/users/admin/init | jq -r .jwt)

          echo "TOKEN=$TOKEN" >> $GITHUB_ENV
